declare const mongopath: any, getAsyncRedis: any;
declare const express: any;
declare const redis: any;
declare const app: any;
declare const i18nModule: any;
declare const path: any;
declare const bodyParser: any;
declare const session: any;
declare const passport: any;
declare const MongoStore: any;
declare const promisify: any;
declare const Course: any;
declare const Page: any;
declare const Menulocation: any;
declare const LocationModel: any;
declare const Language: any;
declare const Setting: any;
declare const languages: any;
declare const flash: any;
declare const cron: any;
declare const EventsController: any;
declare const mongoose: any;
declare const getAvailableTranslations: any;
declare const compression: any;
declare const updateLocaleFile: any;
declare let redisClient: any;
declare const methodOverride: any;
interface Date {
    now(): number;
}
declare const i18nRoutes: any;
declare const indexRoutes: any;
declare const usersRoutes: any;
declare const storiesRoutes: any;
declare const pagesRoutes: any;
declare const employeesRoutes: any;
declare const eventsRoutes: any;
declare const coursesRoutes: any;
declare const redirects: any;
declare const redirectsAdminRoutes: any;
declare const menulocationAdminRoutes: any;
declare const storiesAdminRoutes: any;
declare const coursesAdminRoutes: any;
declare const pagesAdminRoutes: any;
declare const partnersAdminRoutes: any;
declare const employeesAdminRoutes: any;
declare const locationsAdminRoutes: any;
declare const eventsAdminRoutes: any;
declare const contactsAdminRoutes: any;
declare const usersAdminRoutes: any;
declare const settingsAdminRoutes: any;
declare function worker(): Promise<void>;
